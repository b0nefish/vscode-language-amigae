{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Amiga E",
	"scopeName": "source.e",
	"patterns": [
		{
			"include": "#one-line-proc-declaration"
		},		
		{
			"include": "#one-line-proc-expression"
		},		
		{
			"include": "#proc"
		},
		{
			"include": "#object"
		},
		{
			"include": "#expression"
		}
	],
	"repository": {		
		"one-line-proc-declaration": {
			"begin": "\\b(PROC)\\b\\s+(?=.*(IS|RETURN))",
			"end": "\\b(IS|RETURN)\\b",
			"beginCaptures": {
				"1": {"name": "keyword.function.amigae"}
			},
			"endCaptures": {
				"1": {"name": "keyword.function.amigae"}
			},
			"name": "onelineproc.declaration",
			"patterns": [
				{ "include": "#proc-declaration" }
			]
		},
		"one-line-proc-expression": {
			"begin": "((?<=IS)|(?<=RETURN))\\s",
			"end": "\\n",
			"name": "onelineproc.expressions",
			"patterns": [
				{ "include": "#expression" }
			]
		},
		"proc": {
			"begin": "\\b(PROC)\\b\\s+",
			"end": "\\b(ENDPROC)\\b",
			"beginCaptures": {
				"1": {"name": "keyword.function.amigae"}
			},
			"endCaptures": {
				"0": {"name": "keyword.function.amigae"}
			},
			"name": "proc.expressions",
			"patterns": [
				{ "include": "#proc-declaration" },
				{ "include": "#proc-body" }
			]
		},
		"proc-declaration": {
			"name": "proc.declaration",
			"begin": "\\b(\\w+)\\(",
			"end": "\\)\\s*(?:(OF)\\s+\\b(\\w+)\\b)?",
			"beginCaptures": {
				"1": {"name": "entity.name.function.amigae"}
			},
			"endCaptures": {
				"1": {"name": "keyword.function.amigae"},
				"2": {"name": "entity.name.class.amigae"}
			},
			"patterns": [
				{ "include": "#proc-declaration-arguments" }
			]
		},
		"proc-declaration-arguments": {
			"name": "proc.declaration.arguments",
			"begin" : "(?:(?<=\\()|(?<=,))",
			"end" : "(?:(?=\\)|,))",
			"patterns": [
				{ "include": "#argument-declaration" }
		 	]
		},		
		"proc-body": {
			"name": "proc.body",
			"begin" : "$",
			"end" : "^(?=\\bENDPROC\\b)",
			"patterns": [
				{ "include": "#expression" }
		 	]
		},
		"object": {
			"begin": "\\b((?:EXPORT )?OBJECT)\\s+\\b(\\w+)\\b",
			"end": "\\b(ENDOBJECT)\\b",
			"beginCaptures": {
				"1": {"name": "keyword.declaration.class.amigae"},
				"2": {"name": "entity.name.class.amigae"}
			},
			"endCaptures": {
				"0": {"name": "keyword.declaration.class.amigae"}
			},
			"name": "object.expressions",
			"patterns": [
				{ "include": "#object.member" }
			]	
		},
		"object.member":{
			"name": "object.member",
			"begin": "\\b(PRIVATE\\s+)?(?=\\b)",
			"end": "\\n",
			"beginCaptures": {			
				"1": {"name": "storage.modifier.amigae"}
			},
			"patterns": [
				{ "include": "#argument-declaration" }
			]
		},
		"argument-declaration":{
			"name": "argument.declaration",
			"match": "\\s*\\b([_$[:alpha:]]\\w*)(?:(:PTR\\s+TO\\s+)?(?:\\b(ARRAY|CHAR|LONG)\\b|\\b([_$[:alpha:]]\\w*)\\b))?(?:\\s*\\=(\\d.?\\d?))?",
			"captures": {			
				"1": {"name": "variable.other.member.amigae"},
				"2": {"name": "keyword.control.amigae"},
				"3": {"name": "keyword.type.amigae"},
				"4": {"name": "entity.name.class.amigae"},
				"5": {"name": "constant.numeric.amigae"}
			}
		},
		"expression": {
			"patterns": [
				{ 
					"include": "#comments" 
				},
				{ 
					"include": "#keywords" 
				},
				{ 
					"include": "#types" 
				},
				{ 
					"include": "#self" 
				},
				{
					"include": "#strings"
				},
				{
					"include": "#proc-call"
				}
			]
		},
		"comments": {
			"match": "->.*",
			"captures": {			
				"0": {"name": "comment.line"}
			}
		},
		"keywords": {
			"patterns": [{
				"name": "keyword.control.amigae",
				"match": "\\b(IF|ELSE|ENDIF|WHILE|ENDWHILE|FOR|RETURN|DEF|ENUM|CONST|MODULE|OPT|NIL|AND|OR|NEW)\\b"
			}]
		},
		"types": {
			"patterns": [{
				"name": "keyword.type.amigae",
				"match": "\\b(ARRAY|CHAR|LONG)\\b"
			}]
		},
		"strings": {
			"name": "string.quoted.double.amigae",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape.amigae",
					"match": "\\\\."
				}
			]
		},
		"self": {
			"patterns": [{
				"name": "variable.language.self",
				"match": "self\\."
			}]
		},		
		"proc-call" : {
			"name": "proc.call",
			"begin": "\\b(\\w+)\\b(\\()",
			"end": "(\\))",
			"beginCaptures": {			
				"1": {"name": "entity.name.function.amigae"},
				"2": {"name": "punctuation.definition.begin.bracket.round.amigae"}
			},
			"endCaptures": {
				"1": {"name":"punctuation.definition.end.bracket.round"}
			},
			"patterns" : [
				{
					"include": "#proc-arguments"
				}
			]
		},
		"proc-arguments" : {
			"begin" : "(?:(?<=\\()|(?<=,))",
			"end" : "(?:(?=\\)|,))",
			"name": "proc.arguments",
			"patterns" : [
				{
					"include": "#expression"
				}
			]
		}
	}
}